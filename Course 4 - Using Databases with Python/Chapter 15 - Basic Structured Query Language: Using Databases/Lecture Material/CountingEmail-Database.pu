import sqlite3

conn = sqlite3.connect('emaildb.sqlite') #will create the file when it runs
cur = conn.cursor() #kind of like our handle. you open it and send responses and receive responses

cur.execute('''
DROP TABLE IF EXISTS Counts''') #drop the table if it exists. start with a fresh database

cur.execute('''
CREATE TABLE Counts (email TEXT, count INTEGER)''') #

fname = input('Enter file name: ')
if(len(fname) < 1): fname = 'mbox-short.txt'
fh = open(fname)
for line in fh:
    if not line.startswith('From: '): continue
    pieces = line.split()
    email = pieces[1]                           #you give a one-tuple, this isnt actually reading the data.
    cur.execute('SELECT count FROM Counts WHERE email = ? ', (email,)) #? is a place holder. makes sure we dont allow SQL injection
    row = cur.fetchone() #grab the first one, and give it back in row. row is going to be the information that we get from the database
    if row is None: #this is like the get()
        cur.execute('''INSERT INTO Counts (email, count)
                VALUES (?, 1)''', (email,))
    else:
        cur.execute('UPDATE Counts SET count = count + 1 WHERE email = ?', (email,))
    conn.commit() #updates info to disc. commit is the slowest thing here so sometimes you commit every 10 lines

#https://www.sqlite.org/lang_select.html
sqlstr = 'SELECT email, count FROM Counts ORDER BY count DESC LIMIT 10' #descending top 10

for row in cur.execute(sqlstr) :
    print(str(row[0]), row[1]) #rows are tuples

cur.close()
